package rpc;import rpc.client.ConnectionPool;import rpc.client.RpcClient;import rpc.client.service.EchoServiceStub;import rpc.server.RpcServer;public class Main {    public static void main(String[] args) throws Exception {        RpcServer server = new RpcServer(8888);        Thread serverThread = new Thread(() -> {            try {                server.start();            } catch (InterruptedException e) {                System.out.println("ERROR on server start");                e.printStackTrace();            }        });        serverThread.start();        // wait for server to start        Thread.sleep(1000);        // create client + pool        ConnectionPool pool = new ConnectionPool("localhost", 8888, 2);        RpcClient client = new RpcClient(pool);        EchoServiceStub stub = new EchoServiceStub(client);        // call service//        System.out.println("PROGRESSING Sending echo message");        rpc.EchoResponse resp = stub.echo("Helloworld");        System.out.println("Stub client received response: " + resp.getMessage());        // shutdown hook to gracefully close resources        System.out.println("FINISHED, cleaning up resources...");        try {            pool.shutdown();   // close all client channels            server.stop();     // stop Netty server gracefully        } catch (InterruptedException e) {            e.printStackTrace();        }        pool.shutdown();        server.stop();        serverThread.join();    }}